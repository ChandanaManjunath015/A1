#include <stdio.h>
#include <stdlib.h>

struct Node 
{
    int data;
    struct Node* next;
};

struct Node* createNode(int data) 
{
    struct Node* newNode = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

struct Node* bubbleSortLinkedList(struct Node* head)
{
    if (head == NULL || head->next == NULL) 
    {
        return head;
    }
    int swapped;
    struct Node *ptr1;
    struct Node *lptr = NULL;
    do {
        swapped = 0;
        ptr1 = head;
        while (ptr1->next != lptr) 
        {
            if (ptr1->data > ptr1->next->data) 
            {
                int temp = ptr1->data;
                ptr1->data = ptr1->next->data;
                ptr1->next->data = temp;
                swapped = 1;
            }
            ptr1 = ptr1->next;
        }
        lptr = ptr1;
    } while (swapped);
    return head;
}

void printList(struct Node* head) 
{
    struct Node* temp = head;
    while (temp != NULL) 
    {
        printf("%d ",temp->data);
        temp = temp->next;
    }
    printf("\n");
}
int main() 
{
    struct Node* head = createNode(4);
    head->next = createNode(2);
    head->next->next = createNode(1);
    head->next->next->next = createNode(3);
    printf("Original List: ");
    printList(head);
    head = bubbleSortLinkedList(head);
    printf("Sorted List: ");
    printList(head);

    return 0;
}
